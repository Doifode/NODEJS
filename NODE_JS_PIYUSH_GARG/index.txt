//why express ?
// Cause the code we write by using http module  that is built in that is getting complicated  day by day while adding logic or creating new functionalities
// so the express is the frame work that uses the all the methods,callbacks and wrap them in to one frame work and make it easy to handle server-side logic.
// handling URL PARAM and all the extra packages that need to manipulate server-side logic is already include in to it.


//VERSIONING
// Let us see now express have 4.18.2 is a latest version
/* 
first digit 4 == major release of new features and new functionalities need to update.
second digit 18 == major bug fixes 
third digit 2 == minor bug fixes like type o  changes no need to change
^4.18.2 == this carrot symbol say's that don't change the major version while updating packages you change another versions like major bug fixes and minor bug fixes 

~4.18.2 == don't change version and major bug fixes also 
*/

//----REST_API----//

/*

*/

=^=^=^=^=^=^=^=^=^=^=^= Express middleware's =^=^=^=^=^=^=^=^=^=^=^=
// middleware are nothing but the functions that runs on every request and watches on them and filters the request and returns the logic written in to it.
// it takes three arguments request,response,and next 

// HTTP Headers -------

Headers are nothing but the extra information about the request that send by server.
// HTTP headers are an important part of the API request and response as they represent the meta-data associated with the API request and response
Headers carry information For the request and response body.

// HTTP Status Codes -------

Informational responses (100 – 199)
Successful responses (200 – 299)
Redirection messages (300 – 399)
Client error responses (400 – 499)
Server error responses (500 – 599)


// MongoDB
MongoDB is a no-SQL database.
uses document to store data.
BASON format
collections are as a table.

// mongoose 
packages use to connect the MongoDB to connect with MongoDB;





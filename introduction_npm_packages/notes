* Introduction NPM
NPM is a package manager for nodejs.

1. In september 2022 over 2.1 million packages were listed on the npm directory.
2. npm manages downloads of dependencies of your project.

If a project has a package.json file, by running
npm install
it will install everything the project needs, in the node_modules folder, creating it if it's not existing already.

1. You can also install a specific package by running
e.i. npm install <package-name>

--save-dev installs and adds the entry to the package.json file devDependencies
--no-save installs but does not add the entry to the package.json file dependencies
--save-optional installs and adds the entry to the package.json file optionalDependencies
--no-optional will prevent optional dependencies from being installed

Updating packages
Updating is also made easy, by running
npm update

npm will check all packages for a newer version that satisfies your versioning constraints.

You can specify a single package to update as well:
npm update <package-name>

You can install a specific version of a package, by running
npm install <package-name>@<version>

Running Tasks
The package.json file supports a format for specifying command line tasks that can be run by using
npm run <task-name>
{
  "scripts": {
    "start-dev": "node lib/server-development",
    "start": "node lib/server-production"
  }
}
{
  "scripts": {
    "watch": "webpack --watch --progress --colors --config webpack.conf.js",
    "dev": "webpack --progress --colors --config webpack.conf.js",
    "prod": "NODE_ENV=production webpack -p --config webpack.conf.js"
  }
}

So instead of typing those long commands, which are easy to forget or mistype, you can run

$ npm run watch
$ npm run dev
$ npm run prod